import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class PasswordStrengthApp {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            PasswordStrengthView view = new PasswordStrengthView();
            PasswordStrengthModel model = new PasswordStrengthModel();
            new PasswordStrengthController(view, model).start();
        });
    }
}
class PasswordStrengthView {
    private JFrame frame;
    private JPasswordField passwordField;
    private JCheckBox showPasswordCheckbox;
    private JProgressBar strengthBar;
    private JLabel messageLabel;
    private JButton enterButton;
    public PasswordStrengthView() {
        frame = new JFrame("Password Strength Indicator");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 200);
        frame.setResizable(false);
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(6, 1, 5, 5);
        passwordField = new JPasswordField(20);
        showPasswordCheckbox = new JCheckBox("Show Password");
        enterButton = new JButton("Enter");
        strengthBar = new JProgressBar();
        messageLabel = new JLabel();
        // Styling improvements...
        panel.add(new JLabel("Enter Password: "));
        panel.add(passwordField);
        panel.add(strengthBar);
        panel.add(messageLabel);
        panel.add(showPasswordCheckbox);
        panel.add(enterButton);
        frame.add(panel);
        passwordField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                PasswordStrengthController.updateStrength();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                PasswordStrengthController.updateStrength();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                PasswordStrengthController.updateStrength();
            }
        });
        showPasswordCheckbox.addActionListener(e -> PasswordStrengthController.toggleShowPassword());
        enterButton.addActionListener(e -> PasswordStrengthController.enterButtonClicked());
        enterButton.setEnabled(false);
        frame.setVisible(true);
    }
    public void updateStrength(int value, Color color, String strength) {
        strengthBar.setValue(value);
        strengthBar.setForeground(color);
        strengthBar.setString(strength);
    }
    public void setStrengthMessages(String message) {
        messageLabel.setText(message);
    }
    public String getPassword() {
        return new String(passwordField.getPassword());
    }
    public void showMessageDialog(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(frame, message, title, messageType);
    }
}
class PasswordStrengthModel {
    public String checkPasswordStrength(String password) {
        // Your existing code for password strength check...
    }
}
class PasswordStrengthController {
    private static PasswordStrengthView view;
    private static PasswordStrengthModel model;
    public PasswordStrengthController(PasswordStrengthView view, PasswordStrengthModel model) {
        this.view = view;
        this.model = model;
    }
    public static void updateStrength() {
        String password = view.getPassword();
        String strength = model.checkPasswordStrength(password);
        if (strength.equals("Strong")) {
            view.updateStrength(100, Color.GREEN, strength);
            view.setStrengthMessages("");
            view.enterButton.setEnabled(true);
        } else if (strength.equals("Medium")) {
            view.updateStrength(50, Color.ORANGE, strength);
            view.setStrengthMessages("Password is medium strength.");
            view.enterButton.setEnabled(false);
        } else {
            view.updateStrength(20, Color.RED, strength);
            view.setStrengthMessages("Password is weak.");
            view.enterButton.setEnabled(false);
        }
    }
    public static void toggleShowPassword() {
        JCheckBox checkBox = view.showPasswordCheckbox;
        view.passwordField.setEchoChar(checkBox.isSelected() ? '\0' : '*');
    }
    public static void enterButtonClicked() {
        String password = view.getPassword();
        if (password.isEmpty()) {
            view.setStrengthMessages("Please enter a password.");
        } else {
            view.showMessageDialog("Your password is strong.", "Password Strength", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    public void start() {
        updateStrength();
    }
}
